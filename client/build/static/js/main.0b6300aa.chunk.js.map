{"version":3,"sources":["pages/Home.js","pages/Login.js","components/MarketContainer.js","pages/SearchResult.js","pages/Market.js","pages/NewMarket.js","pages/NoMatch.js","components/Navbar.js","components/Map/Map.js","components/Map/mHome.js","App.js","registerServiceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Login","MarketContainer","props","className","key","id","marketName","name","address","city","state","zip","about","SearchResult","markets","roles","this","map","market","_id","components_MarketContainer","Component","Market","NewMarket","email","handleInputChange","event","_event$target","target","value","_this","setState","Object","defineProperty","handleFormSubmit","preventDefault","console","log","e","index","checked","push","indexOf","splice","type","placeholder","onChange","aria-describedby","rows","bind","onClick","NoMatch","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","window","location","pathname","Link","to","Geocode","setApiKey","enableDebug","Map","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCity","addressArray","i","length","types","long_name","getArea","j","getState","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","lat","newLng","lng","fromLatLng","then","response","results","formatted_address","address_components","area","error","onPlaceSelected","place","latValue","geometry","lngValue","markerPosition","mapPosition","center","_this2","nextProps","nextState","_this3","AsyncMap","withScriptjs","withGoogleMap","lib","google","defaultZoom","zoom","defaultCenter","onClose","position","style","padding","margin","draggable","onDragEnd","react_google_autocomplete_default","width","height","paddingLeft","marginTop","marginBottom","undefined","htmlFor","readOnly","googleMapURL","loadingElement","containerElement","mapElement","mHome","components_Map_Map","App","BrowserRouter","components_Navbar","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0b6300aa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Garden App Home Page</h1>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur tincidunt sit amet diam et ullamcorper. Curabitur vitae dolor feugiat, commodo lacus vitae, cursus ligula. Curabitur ut tristique tellus. Mauris lacus arcu, posuere vitae arcu at, mollis laoreet nunc. Donec a ipsum sit amet augue aliquet mattis ut sed nulla. Nam blandit quis velit nec suscipit. Aenean sit amet accumsan justo, vel rutrum tortor. Donec blandit venenatis purus quis suscipit. Proin vehicula mauris at lectus accumsan tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce dui eros, laoreet sit amet dolor ac, pretium blandit libero. Maecenas imperdiet est neque, eu vulputate lacus suscipit sit amet. Maecenas massa leo, auctor nec tellus accumsan, hendrerit sagittis eros. Proin aliquam justo sed fringilla fermentum.</p>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec in dictum felis. Nunc sed justo id purus placerat fermentum. Fusce ultrices consectetur arcu, et semper sem molestie quis. Morbi in elit eget nunc sollicitudin pharetra. Suspendisse eu erat aliquet, vestibulum ante vel, volutpat metus. Cras ac est felis. Quisque quis imperdiet tortor, porttitor semper tortor. In libero nunc, vehicula quis imperdiet ut, tempus a metus. Fusce nunc felis, egestas at volutpat ac, semper non tellus. Etiam eu sapien ex.</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>This is our Login Page</h1>\r\n            <p>Field for name and password will be here.</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nfunction MarketContainer(props) {\r\n\r\n    return(\r\n        \r\n    <div className=\"card\" key={props.id}>\r\n        <div className=\"card-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h1 className=\"card-title\">Market Name: {props.marketName}</h1>\r\n                    <h3 className=\"card-subtitle mb-2 text-muted\">Organizer: {props.name}</h3>\r\n                    <hr />\r\n                    <div className=\"row\">\r\n                        <ul>\r\n                            <li>{props.address}</li>\r\n                            <li>{props.city}</li>\r\n                            <li>{props.state}</li>\r\n                            <li>{props.zip}</li>\r\n                        </ul>\r\n                        <p>{props.about}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MarketContainer;\r\n\r\n","import React, { Component } from \"react\";\r\n// import API from \"../utils/API\";\r\nimport MarketContainer from \"../components/MarketContainer\";\r\n\r\nclass SearchResult extends Component {\r\n    state = {\r\n        markets: [],\r\n        marketName: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        about: \"\",\r\n        roles: []\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     this.loadMarkets();\r\n    // };\r\n\r\n    // loadMarkets = () => {\r\n    //     API.getMarkets()\r\n    //         .then(res =>\r\n    //             this.setState({\r\n    //                 markets: res.data,\r\n    //                 marketName: \"\",\r\n    //                 name: \"\",\r\n    //                 address: \"\",\r\n    //                 city: \"\",\r\n    //                 state: \"\",\r\n    //                 zip: \"\",\r\n    //                 about: \"\",\r\n    //                 roles: []\r\n    //             }))\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9 mx-auto\">\r\n                    <h1>This is our Search Page</h1>\r\n                    {this.state.markets.map(market => (\r\n                        <div className=\"row\" key={market._id}>\r\n                            <div className=\"col-md-12 mx-auto\">\r\n                                <MarketContainer\r\n                                    marketName={market.marketName}\r\n                                    name={market.name}\r\n                                    address={market.address}\r\n                                    city={market.city}\r\n                                    state={market.state}\r\n                                    zip={market.zip}\r\n                                    about={market.about}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResult;","import React, { Component } from \"react\";\r\n// import API from \"../utils/API\";\r\nimport MarketContainer from \"../components/MarketContainer\";\r\n\r\nclass Market extends Component {\r\n\r\n    state = {\r\n        markets: [],\r\n        marketName: \"\",\r\n        name: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        about: \"\",\r\n        roles: []\r\n    };\r\n    // componentDidMount() {\r\n    //     this.loadOneMarket();\r\n    // }\r\n\r\n    // loadOneMarket = () => {\r\n    //     API.getOneMarket()\r\n    //         .then(res =>\r\n    //             this.setState({\r\n    //                 markets: res.data,\r\n    //                 marketName: \"\",\r\n    //                 name: \"\",\r\n    //                 address: \"\",\r\n    //                 city: \"\",\r\n    //                 state: \"\",\r\n    //                 zip: \"\",\r\n    //                 about: \"\",\r\n    //                 roles: []\r\n    //             }))\r\n    // }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h1>Market </h1>\r\n                <p>This will contain an existing market page found by searching by address/zip code.</p>\r\n                <br />\r\n                {this.state.markets.map(market => (\r\n                    <div className=\"row\" key={market._id}>\r\n                        <div className=\"col-md-12 mx-auto\">\r\n                            <MarketContainer\r\n                                marketName={market.marketName}\r\n                                name={market.name}\r\n                                address={market.address}\r\n                                city={market.city}\r\n                                state={market.state}\r\n                                zip={market.zip}\r\n                                about={market.about}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Market;","import React, { Component } from \"react\";\r\n// import API from \"../utils/API\";\r\n\r\nclass NewMarket extends Component {\r\n    state = {\r\n        marketName: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\",\r\n        about: \"\",\r\n        roles: []\r\n\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onChange(e) {\r\n        const roles = this.state.roles\r\n        let index\r\n        if (e.target.checked) {\r\n            roles.push(e.target.value)\r\n        } else {\r\n            index = roles.indexOf(+e.target.value)\r\n            roles.splice(index, 1)\r\n        }\r\n        this.setState({ roles: roles })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.marketName && this.state.name && this.state.email) {\r\n            // API.saveMarket({\r\n            //     marketName: this.state.marketName,\r\n            //     name: this.state.name,\r\n            //     email: this.state.email,\r\n            //     roles: this.state.roles,\r\n            //     state: this.state.state,\r\n            //     city: this.state.city,\r\n            //     zip: this.state.zip,\r\n            //     about: this.state.about\r\n            // })\r\n            console.log(\"worked!\")\r\n            console.log({\r\n                marketName: this.state.marketName,\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                roles: this.state.roles,\r\n                state: this.state.state,\r\n                city: this.state.city,\r\n                zip: this.state.zip,\r\n                about: this.state.about\r\n\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container new-market-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h1>New Market Page</h1>\r\n                            <p>This will contain a form to create a new market.</p>\r\n                            <form>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>Market Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"marketName\" placeholder=\"Example Market\" value={this.state.marketName} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>Organizer Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Johnny Appleseed\" value={this.state.name} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>Email address</label>\r\n                                        <input type=\"email\" className=\"form-control\" name=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleInputChange} />\r\n                                        <small name=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"address\" placeholder=\"1234 Main St\" value={this.state.address} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-8\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"city\" value={this.state.city} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <label>State</label>\r\n                                        <select name=\"state\" className=\"form-control\" value={this.state.state} onChange={this.handleInputChange}>\r\n                                            <option>Choose...</option>\r\n                                            <option value=\"MN\">MN</option>\r\n                                            <option value=\"WI\">WI</option>\r\n                                            <option value=\"MI\">MI</option>\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-2\">\r\n                                        <label>Zip</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"zip\" value={this.state.zip} onChange={this.handleInputChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-12\">\r\n                                        <label>Tell us about your market:</label>\r\n                                        <textarea className=\"form-control\" name=\"about\" rows=\"3\" value={this.state.about} onChange={this.handleInputChange}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Choose all that apply:</label>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"growerVeg\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Grower of Vegetables</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"growerFruit\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Grower of Fruits</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"landowner\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Landowner</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"baker\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Baker</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"beekeeper\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Beekeeper</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"poultry\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Poultry Farmer</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"other\" onChange={this.onChange.bind(this)} />\r\n                                        <label className=\"form-check-label\">Other</label>\r\n                                    </div>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleFormSubmit}>Submit</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewMarket;","import React from \"react\";\r\n\r\nfunction NoMatch() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found</h1>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/home\">Garden App</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className={window.location.pathname === \"/home\" ? \"active\" : \"\"}>\r\n                        <Link className=\"nav-link\" to=\"/home\">Home </Link>\r\n                    </li>\r\n                    <li className={window.location.pathname === \"/newmarket\" ? \"active\" : \"\"}>\r\n                        <Link className=\"nav-link\" to=\"/newmarket\">NewMarket</Link>\r\n                    </li>\r\n                    <li className={window.location.pathname === \"/login\" ? \"active\" : \"\"}>\r\n                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                    </li>\r\n                    <li className={window.location.pathname === \"/market\" ? \"active\" : \"\"}>\r\n                        <Link className=\"nav-link\" to=\"/market\">Market</Link>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nGeocode.setApiKey( \"AIzaSyDGe5vjL8wBmilLzoJ0jNIwe9SAuH2xS_0\" );\r\nGeocode.enableDebug();\r\n\r\nclass Map extends Component{\r\n\r\n\tconstructor( props ){\r\n\t\tsuper( props );\r\n\t\tthis.state = {\r\n\t\t\taddress: '',\r\n\t\t\tcity: '',\r\n\t\t\tarea: '',\r\n\t\t\tstate: '',\r\n\t\t\tmapPosition: {\r\n\t\t\t\tlat: this.props.center.lat,\r\n\t\t\t\tlng: this.props.center.lng\r\n\t\t\t},\r\n\t\t\tmarkerPosition: {\r\n\t\t\t\tlat: this.props.center.lat,\r\n\t\t\t\tlng: this.props.center.lng\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Get the current address from the default map position and set those values in the state\r\n\t */\r\n\tcomponentDidMount() {\r\n\t\tGeocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconst address = response.results[0].formatted_address,\r\n\t\t\t\t\taddressArray =  response.results[0].address_components,\r\n\t\t\t\t\tcity = this.getCity( addressArray ),\r\n\t\t\t\t\tarea = this.getArea( addressArray ),\r\n\t\t\t\t\tstate = this.getState( addressArray );\r\n\r\n\t\t\t\tconsole.log( 'city', city, area, state );\r\n\r\n\t\t\t\tthis.setState( {\r\n\t\t\t\t\taddress: ( address ) ? address : '',\r\n\t\t\t\t\tarea: ( area ) ? area : '',\r\n\t\t\t\t\tcity: ( city ) ? city : '',\r\n\t\t\t\t\tstate: ( state ) ? state : '',\r\n\t\t\t\t} )\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error( error );\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\t/**\r\n\t * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\r\n\t *\r\n\t * @param nextProps\r\n\t * @param nextState\r\n\t * @return {boolean}\r\n\t */\r\n\tshouldComponentUpdate( nextProps, nextState ){\r\n\t\tif (\r\n\t\t\tthis.state.markerPosition.lat !== this.props.center.lat ||\r\n\t\t\tthis.state.address !== nextState.address ||\r\n\t\t\tthis.state.city !== nextState.city ||\r\n\t\t\tthis.state.area !== nextState.area ||\r\n\t\t\tthis.state.state !== nextState.state\r\n\t\t) {\r\n\t\t\treturn true\r\n\t\t} else if ( this.props.center.lat === nextProps.center.lat ){\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Get the city and set the city input value to the one selected\r\n\t *\r\n\t * @param addressArray\r\n\t * @return {string}\r\n\t */\r\n\tgetCity = ( addressArray ) => {\r\n\t\tlet city = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n\t\t\t\tcity = addressArray[ i ].long_name;\r\n\t\t\t\treturn city;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * Get the area and set the area input value to the one selected\r\n\t *\r\n\t * @param addressArray\r\n\t * @return {string}\r\n\t */\r\n\tgetArea = ( addressArray ) => {\r\n\t\tlet area = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tif ( addressArray[ i ].types[0]  ) {\r\n\t\t\t\tfor ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n\t\t\t\t\tif ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n\t\t\t\t\t\tarea = addressArray[ i ].long_name;\r\n\t\t\t\t\t\treturn area;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * Get the address and set the address input value to the one selected\r\n\t *\r\n\t * @param addressArray\r\n\t * @return {string}\r\n\t */\r\n\tgetState = ( addressArray ) => {\r\n\t\tlet state = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n\t\t\t\t\tstate = addressArray[ i ].long_name;\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * And function for city,state and address input\r\n\t * @param event\r\n\t */\r\n\tonChange = ( event ) => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\t/**\r\n\t * This Event triggers when the marker window is closed\r\n\t *\r\n\t * @param event\r\n\t */\r\n\tonInfoWindowClose = ( event ) => {\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * When the marker is dragged you get the lat and long using the functions available from event object.\r\n\t * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n\t * And then set those values in the state.\r\n\t *\r\n\t * @param event\r\n\t */\r\n\tonMarkerDragEnd = ( event ) => {\r\n\t\tlet newLat = event.latLng.lat(),\r\n\t\t\tnewLng = event.latLng.lng();\r\n\r\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconst address = response.results[0].formatted_address,\r\n\t\t\t\t\taddressArray =  response.results[0].address_components,\r\n\t\t\t\t\tcity = this.getCity( addressArray ),\r\n\t\t\t\t\tarea = this.getArea( addressArray ),\r\n\t\t\t\t\tstate = this.getState( addressArray );\r\n\t\t\t\tthis.setState( {\r\n\t\t\t\t\taddress: ( address ) ? address : '',\r\n\t\t\t\t\tarea: ( area ) ? area : '',\r\n\t\t\t\t\tcity: ( city ) ? city : '',\r\n\t\t\t\t\tstate: ( state ) ? state : ''\r\n\t\t\t\t} )\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t * When the user types an address in the search box\r\n\t * @param place\r\n\t */\r\n\tonPlaceSelected = ( place ) => {\r\n\t\tconsole.log( 'plc', place );\r\n\t\tconst address = place.formatted_address,\r\n\t\t\taddressArray =  place.address_components,\r\n\t\t\tcity = this.getCity( addressArray ),\r\n\t\t\tarea = this.getArea( addressArray ),\r\n\t\t\tstate = this.getState( addressArray ),\r\n\t\t\tlatValue = place.geometry.location.lat(),\r\n\t\t\tlngValue = place.geometry.location.lng();\r\n\t\t// Set these values in the state.\r\n\t\tthis.setState({\r\n\t\t\taddress: ( address ) ? address : '',\r\n\t\t\tarea: ( area ) ? area : '',\r\n\t\t\tcity: ( city ) ? city : '',\r\n\t\t\tstate: ( state ) ? state : '',\r\n\t\t\tmarkerPosition: {\r\n\t\t\t\tlat: latValue,\r\n\t\t\t\tlng: lngValue\r\n\t\t\t},\r\n\t\t\tmapPosition: {\r\n\t\t\t\tlat: latValue,\r\n\t\t\t\tlng: lngValue\r\n\t\t\t},\r\n\t\t})\r\n\t};\r\n\r\n\r\n\trender(){\r\n\t\tconst AsyncMap = withScriptjs(\r\n\t\t\twithGoogleMap(\r\n\t\t\t\tprops => (\r\n\t\t\t\t\t<GoogleMap google={ this.props.google }\r\n\t\t\t\t\t           defaultZoom={ this.props.zoom }\r\n\t\t\t\t\t           defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* InfoWindow on top of marker */}\r\n\t\t\t\t\t\t<InfoWindow\r\n\t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\r\n\t\t\t\t\t\t\tposition={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{ this.state.address }</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t\t{/*Marker*/}\r\n\t\t\t\t\t\t<Marker google={this.props.google}\r\n\t\t\t\t\t\t        name={'Dolores park'}\r\n\t\t\t\t\t\t        draggable={true}\r\n\t\t\t\t\t\t        onDragEnd={ this.onMarkerDragEnd }\r\n\t\t\t\t\t\t        position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Marker />\r\n\t\t\t\t\t\t{/* For Auto complete Search Box */}\r\n\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\t\t\tpaddingLeft: '16px',\r\n\t\t\t\t\t\t\t\tmarginTop: '2px',\r\n\t\t\t\t\t\t\t\tmarginBottom: '100px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</GoogleMap>\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t\tlet map;\r\n\t\tif( this.props.center.lat !== undefined ) {\r\n\t\t\tmap = <div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">City</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"city\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.city }/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">Area</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"area\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.area }/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">State</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"state\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.state }/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">Address</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"address\" className=\"form-control\" onChange={ this.onChange } readOnly=\"readOnly\" value={ this.state.address }/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<AsyncMap\r\n\t\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDGe5vjL8wBmilLzoJ0jNIwe9SAuH2xS_0&libraries=places\"\r\n\t\t\t\t\tloadingElement={\r\n\t\t\t\t\t\t<div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontainerElement={\r\n\t\t\t\t\t\t<div style={{ height: this.props.height }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmapElement={\r\n\t\t\t\t\t\t<div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t} else {\r\n\t\t\tmap = <div style={{height: this.props.height}} />\r\n\t\t}\r\n\t\treturn( map )\r\n\t}\r\n}\r\nexport default Map","import React, { Component } from 'react';\r\nimport Map from './Map';\r\n\r\nclass mHome extends Component {\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div style={{ margin: '100px' }}>\r\n\t\t\t\t<Map\r\n\t\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\t\tcenter={{lat: 18.5204, lng: 73.8567}}\r\n\t\t\t\t\theight='300px'\r\n\t\t\t\t\tzoom={15}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default mHome;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SearchResult from \"./pages/SearchResult\";\r\nimport Market from \"./pages/Market\";\r\nimport NewMarket from \"./pages/NewMarket\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport mHome from \"./components/Map/mHome\"\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"container.fluid\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/searchresult\" component={SearchResult} />\r\n            <Route exact path=\"/newmarket\" component={NewMarket} />\r\n            {/* The following line won't exist in final version. Just for testing purposes using a generic market. */}\r\n            <Route exact path=\"/market\" component={Market} />\r\n            {/* The following line will take user to a specific market by id */}\r\n            <Route exact path=\"/market/:id\" component={Market} />\r\n            <Route exact path=\"/map\" component={mHome} />\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </div>\r\n        <div>\r\n          \r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}